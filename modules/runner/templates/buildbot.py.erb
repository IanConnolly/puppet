#!/usr/bin/env python
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# Make sure runner runs at boot

import os
import subprocess
import time

import logging
log = logging.getLogger(__name__)


BUILDSLAVE_CMD = '/tools/buildbot/bin/buildslave'
RUNSLAVE = '/usr/local/bin/runslave.py'
# use the python from the buildbot virtualenv
PYTHON = '/tools/buildbot/bin/python'
BUILD_USER = "<%= scope.lookupvar('::config::builder_username') %>"


def buildbot_running():
    return os.path.isfile('/builds/slave/twistd.pid')


def main():
    logging.basicConfig(format="%(asctime)s - %(levelname)s - %(message)s")

    if buildbot_running():
        print "Buildbot already running, exiting"
        exit(0)

    print "buildbot " + str(os.path.isfile(BUILDSLAVE_CMD)
                            and os.access(BUILDSLAVE_CMD, os.X_OK))

    if not (os.path.isfile(BUILDSLAVE_CMD)
            and os.access(BUILDSLAVE_CMD, os.X_OK)):
        exit(0)

    print "buildbot: before"
    p = subprocess.Popen(['su', '-',
                          BUILD_USER,
                          '-c',
                          PYTHON + ' ' + RUNSLAVE])
    p.wait()

    if buildbot_running():
        with open('/builds/slave/twistd.pid', 'r') as f:
            pid = int(f.read())
            while True:
                try:
                    os.kill(pid, 0)
                except OSError:
                    print "Buildbot finished!"
                    break
                print "Buildbot still running!"
                time.sleep(5)
    else:
        print "Buildbot failed to start!"
        exit(1)

    exit(0)


if __name__ == '__main__':
    main()
